{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","hepler/sortedTodos.ts","index.tsx"],"names":["TodoList","todos","onSelectTodo","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","query","handleSearch","handleClear","selectedFilter","handleSelect","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onCloseModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","data","finally","href","email","name","App","setTodos","setSelectedTodo","searchQuery","setSearchQuery","setSelectedFilter","visibleTodos","useMemo","filteredTodos","intialTodos","selectedValue","allTodos","filter","sortedTodos","preparedQuery","toLowerCase","trim","includes","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.872e054f.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectTodo:(todo: Todo) => void;\n};\n// has-background-info-light\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          className={cn(\n            { 'has-background-info-light': selectedTodo?.id === todo.id },\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              {todo.completed && (\n                <i className=\"fas fa-check\" />\n              )}\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              key={todo.id}\n              className={cn({ 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={cn('far',\n                  { 'fa-eye': selectedTodo?.id !== todo.id },\n                  { 'fa-eye-slash': selectedTodo?.id === todo.id })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ninterface Props {\n  query: string,\n  handleSearch: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  handleClear: () => void;\n  handleSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  selectedFilter:string;\n}\n\nexport const TodoFilter:FC <Props> = ({\n  query,\n  handleSearch,\n  handleClear,\n  selectedFilter,\n  handleSelect,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectedFilter}\n          onChange={handleSelect}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={handleSearch}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleClear}\n          />\n        </span>\n      )}\n\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo;\n  onCloseModal: () => void;\n\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onCloseModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(selectedTodo?.userId)\n      .then((data) => setUser(data))\n      .finally(() => setIsLoading(false));\n  }, [selectedTodo]);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onCloseModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport './App.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport React, { useEffect, useState, useMemo } from 'react';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { sortedTodos } from './hepler/sortedTodos';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(data => setTodos(data))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const handleSearch = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleClear = () => {\n    setSearchQuery('');\n  };\n\n  const handleSelect = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedFilter(event.target.value);\n  };\n\n  const handleSelectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  const visibleTodos = useMemo(() => {\n    let filteredTodos = sortedTodos(todos, selectedFilter);\n\n    if (searchQuery) {\n      const preparedQuery = searchQuery.toLowerCase().trim();\n\n      filteredTodos = filteredTodos.filter(\n        todo => todo.title.includes(preparedQuery),\n      );\n    }\n\n    return filteredTodos;\n  }, [todos, searchQuery, selectedFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                handleSearch={handleSearch}\n                handleClear={handleClear}\n                handleSelect={handleSelect}\n                selectedFilter={selectedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoList\n                todos={visibleTodos}\n                onSelectTodo={handleSelectTodo}\n                selectedTodo={selectedTodo}\n              />\n\n              {isLoading && (\n                <Loader />)}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onCloseModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport const sortedTodos = (\n  intialTodos: Todo[],\n  selectedValue: string,\n): Todo[] => {\n  const allTodos = [...intialTodos];\n\n  if (selectedValue) {\n    switch (selectedValue) {\n      case 'active':\n        return allTodos.filter(\n          todo => !todo.completed,\n        );\n\n      case 'completed':\n        return allTodos.filter(\n          todo => todo.completed,\n        );\n\n      default:\n        return allTodos;\n    }\n  }\n\n  return allTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}